[{"D:\\react-app\\my-app\\src\\index.js":"1","D:\\react-app\\my-app\\src\\reportWebVitals.js":"2","D:\\react-app\\my-app\\src\\App.js":"3","D:\\react-app\\my-app\\src\\conmponents\\Header\\Header.jsx":"4","D:\\react-app\\my-app\\src\\conmponents\\Sidebar\\Sidebar.jsx":"5","D:\\react-app\\my-app\\src\\conmponents\\Profile\\Profile.jsx":"6","D:\\react-app\\my-app\\src\\conmponents\\Profile\\myPosts\\Post.jsx":"7","D:\\react-app\\my-app\\src\\conmponents\\Dialogs\\Dialog\\Dialog.jsx":"8","D:\\react-app\\my-app\\src\\conmponents\\Dialogs\\Message\\Message.jsx":"9","D:\\react-app\\my-app\\src\\conmponents\\Dialogs\\DialogsBlock.jsx":"10","D:\\react-app\\my-app\\src\\conmponents\\Profile\\AccountUser.js":"11","D:\\react-app\\my-app\\src\\redux\\dialogsReduser.js":"12","D:\\react-app\\my-app\\src\\redux\\profileReduser.js":"13","D:\\react-app\\my-app\\src\\conmponents\\Dialogs\\DialogsBlockContainer.jsx":"14","D:\\react-app\\my-app\\src\\conmponents\\Profile\\ProfileContainer.jsx":"15","D:\\react-app\\my-app\\src\\redux\\store.js":"16","D:\\react-app\\my-app\\src\\redux\\redux-state.js":"17","D:\\react-app\\my-app\\src\\conmponents\\Sidebar\\SidebarContainer.js":"18","D:\\react-app\\my-app\\src\\conmponents\\Sidebar\\MyFriends.js":"19","D:\\react-app\\my-app\\src\\conmponents\\Users\\UsersBlockContainer.js":"20","D:\\react-app\\my-app\\src\\redux\\usersReduser.js":"21","D:\\react-app\\my-app\\src\\conmponents\\Users\\Users.jsx":"22"},{"size":820,"mtime":1613053432541,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":984,"mtime":1613121141307,"results":"26","hashOfConfig":"24"},{"size":256,"mtime":1611416998558,"results":"27","hashOfConfig":"24"},{"size":1571,"mtime":1613123021154,"results":"28","hashOfConfig":"24"},{"size":880,"mtime":1613053432503,"results":"29","hashOfConfig":"24"},{"size":1366,"mtime":1613053432485,"results":"30","hashOfConfig":"24"},{"size":424,"mtime":1611426039185,"results":"31","hashOfConfig":"24"},{"size":240,"mtime":1612446729500,"results":"32","hashOfConfig":"24"},{"size":1199,"mtime":1613066705275,"results":"33","hashOfConfig":"24"},{"size":813,"mtime":1612363892218,"results":"34","hashOfConfig":"24"},{"size":1525,"mtime":1613067123831,"results":"35","hashOfConfig":"24"},{"size":2709,"mtime":1613121278056,"results":"36","hashOfConfig":"24"},{"size":1819,"mtime":1613066705012,"results":"37","hashOfConfig":"24"},{"size":1657,"mtime":1613053465608,"results":"38","hashOfConfig":"24"},{"size":4411,"mtime":1613053180725,"results":"39","hashOfConfig":"24"},{"size":389,"mtime":1613202848690,"results":"40","hashOfConfig":"24"},{"size":384,"mtime":1613051288189,"results":"41","hashOfConfig":"24"},{"size":308,"mtime":1612963073966,"results":"42","hashOfConfig":"24"},{"size":928,"mtime":1613296192484,"results":"43","hashOfConfig":"24"},{"size":1661,"mtime":1613301787748,"results":"44","hashOfConfig":"24"},{"size":3077,"mtime":1613302240317,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"n6uala",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react-app\\my-app\\src\\index.js",[],["97","98"],"D:\\react-app\\my-app\\src\\reportWebVitals.js",[],"D:\\react-app\\my-app\\src\\App.js",[],"D:\\react-app\\my-app\\src\\conmponents\\Header\\Header.jsx",["99"],"import headStyle from \"./Header.module.css\";\r\nimport logoImg from \"../../logo.svg\"\r\nconst Header = () => {\r\n    return (\r\n        <header className={headStyle.header}>\r\n            <img src={logoImg}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\react-app\\my-app\\src\\conmponents\\Sidebar\\Sidebar.jsx",[],"D:\\react-app\\my-app\\src\\conmponents\\Profile\\Profile.jsx",[],"D:\\react-app\\my-app\\src\\conmponents\\Profile\\myPosts\\Post.jsx",[],"D:\\react-app\\my-app\\src\\conmponents\\Dialogs\\Dialog\\Dialog.jsx",[],"D:\\react-app\\my-app\\src\\conmponents\\Dialogs\\Message\\Message.jsx",[],"D:\\react-app\\my-app\\src\\conmponents\\Dialogs\\DialogsBlock.jsx",[],"D:\\react-app\\my-app\\src\\conmponents\\Profile\\AccountUser.js",["100","101"],"import profileStyle from \"./Profile.module.css\";\r\n\r\nconst AccountUser = () => {\r\n    return (\r\n        <div>\r\n            <img className={profileStyle.content_img} src=\"https://cs10.pikabu.ru/post_img/big/2018/07/02/11/1530555134117293047.jpg\" />\r\n                <div className={profileStyle.description}>\r\n                    <img className={profileStyle.content_avatar} src=\"https://img.freepik.com/free-photo/pretty-smiling-joyfully-female-with-fair-hair-dressed-casually-looking-with-satisfaction_176420-15187.jpg?size=626&ext=jpg\" />\r\n                    <div className={profileStyle.info}>\r\n                        <h1>Anna Makarova</h1>\r\n                        <p>Saint Petersburg 20 years</p>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountUser;\r\n","D:\\react-app\\my-app\\src\\redux\\dialogsReduser.js",[],"D:\\react-app\\my-app\\src\\redux\\profileReduser.js",["102"],"import imgLike from \"./../img/likesOrdislike/facebook_like.png\";\r\nimport imgDisLike from \"./../img/likesOrdislike/facebook_dislike.png\";\r\nimport keanu_reeves from \"./../img/userAvatar/keanu_reeves.jpg\";\r\nimport foods_person from \"../img/userAvatar/foods_person.jpg\";\r\nimport girl from \"../img/userAvatar/girl.jpg\";\r\n\r\nconst addPostString = \"ADD-POST\";\r\nconst updateTextString = \"UPDATE-TEXT-AREA\";\r\n\r\nlet initialState = {\r\n    postInfo: [\r\n            {\r\n                postImg: keanu_reeves,\r\n                imgLike: imgLike,\r\n                imgDisLike: imgDisLike,\r\n                nameUser: \"Numi\",\r\n                id: 0,\r\n                countLike: [0],\r\n                countDislike: [0],\r\n                postText: \"Helloooooo\"\r\n            },\r\n            {\r\n                postImg: foods_person,\r\n                imgLike: imgLike,\r\n                imgDisLike: imgDisLike,\r\n                nameUser: \"Logan\",\r\n                id: 0,\r\n                countLike: [0],\r\n                countDislike: [0],\r\n                postText: \"She's a beatisdful girl\"\r\n            },\r\n            {\r\n                postImg: girl,\r\n                imgLike: imgLike,\r\n                imgDisLike: imgDisLike,\r\n                nameUser: \"Huliganka\",\r\n                id: 0,\r\n                countLike: [0],\r\n                countDislike: [0],\r\n                postText: \"He's a good man\"\r\n            }\r\n        ],\r\n    newPostText: \"\"\r\n}\r\n\r\nconst profileReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case addPostString :\r\n            if (state.newPostText) {\r\n                let addItemPost = {\r\n                    postImg: keanu_reeves,\r\n                    imgLike: imgLike,\r\n                    imgDisLike: imgDisLike,\r\n                    nameUser: \"Anna\",\r\n                    countLike: 0,\r\n                    countDislike: 0,\r\n                    postText: state.newPostText,\r\n                    id: 1\r\n                }\r\n                return {\r\n                    ...state,\r\n                    postInfo: [addItemPost, ...state.postInfo],\r\n                    newPostText: \"\"\r\n                }\r\n            }\r\n        case updateTextString:\r\n            return {\r\n                ...state,\r\n                newPostText: action.text\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n};\r\n\r\nexport const ADD_POST = () => ({type: addPostString});\r\nexport const UPDATE_TEXT = (text) => ({type: updateTextString, text: text});\r\nexport default profileReduser;\r\n\r\n\r\n/*\r\nlet copyState = {...state}\r\n            copyState.postInfo = [...state.postInfo]\r\n            copyState.postInfo.unshift(addItemPost);\r\n            copyState.newPostText = \"\"\r\n*/","D:\\react-app\\my-app\\src\\conmponents\\Dialogs\\DialogsBlockContainer.jsx",["103"],"import React from \"react\"\r\nimport {TYPE_ADD_MESSAGE, TYPE_UPDATE_TEXT_MESSAGE} from \"../../redux/dialogsReduser\";\r\nimport DialogsBlock from \"./DialogsBlock\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// const DialogsBlockContainer = () => {\r\n\r\n//     return <MyContext.Consumer>\r\n//         { (store) => {\r\n//             console.log(store);\r\n//             const storeAppeal = store.appeal()\r\n//             const dialog = storeAppeal.dialogsPage.dialogsItems.map( item => <Dialog userImage={item.userImage} name={item.name} id={`/dialogs/${item.id}`}/> );\r\n//             const message = storeAppeal.dialogsPage.messagesItems.map( item => <Message message={item.message}/> );\r\n//             const addMessage = () => {\r\n//                 store.dispatch(TYPE_ADD_MESSAGE());\r\n//             };\r\n//             const onChangeMessage = (e) => {\r\n//                 store.dispatch(TYPE_UPDATE_TEXT_MESSAGE(e.target.value))\r\n//             }\r\n//             return <DialogsBlock onChangeMessage={onChangeMessage} addMessage={addMessage}\r\n//             dialogMap={dialog} messageMap={message}\r\n//             textAreaDialog={storeAppeal.dialogsPage.textMessage} />\r\n//         }}\r\n//     </MyContext.Consumer>\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogMap: state.dialogs.dialogsItems,\r\n        messageMap: state.dialogs.messagesItems,\r\n        textAreaDialog: state.dialogs.textMessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeMessage: (e) => {\r\n            dispatch(TYPE_UPDATE_TEXT_MESSAGE(e.target.value))\r\n        },\r\n        addMessage: () => {\r\n            dispatch(TYPE_ADD_MESSAGE())\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsBlockContainer = connect(mapStateToProps, mapDispatchToProps)(DialogsBlock)\r\nexport default DialogsBlockContainer;","D:\\react-app\\my-app\\src\\conmponents\\Profile\\ProfileContainer.jsx",["104"],"import Post from \"./myPosts/Post\";\r\nimport {ADD_POST, UPDATE_TEXT} from \"../../redux/profileReduser\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// import { MyContext } from \"../..\";\r\n// const ProfileContainer = () => {\r\n//   return <MyContext.Consumer>\r\n//     { store => {\r\n//       const storeAppeal = store.appeal()\r\n//       const postItems = storeAppeal.profilePage.postInfo.map(item => <Post\r\n//         imgDisLike={item.imgDisLike} imgLike={item.imgLike}\r\n//         postImg={item.postImg} nameUser={item.nameUser}\r\n//         postText={item.postText} countLike={item.countLike}\r\n//         countDisLike={item.countDislike} />\r\n//       )\r\n//       const addNewPost = () => {\r\n//         store.dispatch(ADD_POST());\r\n//       }\r\n//       const changeText = (e) => {\r\n//         store.dispatch(UPDATE_TEXT(e.target.value))\r\n//       }\r\n//       return <Profile changeText={ changeText } addNewPost={ addNewPost } postItems={ postItems } \r\n//       textAreaProfile={ storeAppeal.profilePage.newPostText }/> \r\n//     }}\r\n//   </MyContext.Consumer\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeText: function (event) {\r\n            let text = UPDATE_TEXT(event.target.value)\r\n            dispatch(text)\r\n        },\r\n        addNewPost: function () {\r\n            dispatch(ADD_POST())\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postInfo: state.profile.postInfo,\r\n        newPostText: state.profile.newPostText\r\n    }\r\n}\r\n\r\n\r\nconst ConnectBlockProfile = connect(mapStateToProps, mapDispatchToProps)(Profile)\r\nexport default ConnectBlockProfile;","D:\\react-app\\my-app\\src\\redux\\store.js",[],"D:\\react-app\\my-app\\src\\redux\\redux-state.js",[],"D:\\react-app\\my-app\\src\\conmponents\\Sidebar\\SidebarContainer.js",[],"D:\\react-app\\my-app\\src\\conmponents\\Sidebar\\MyFriends.js",["105","106"],"import sidebarStyle from \"./Sidebar.module.css\";\r\n\r\nconst MyFriends = (props) => {\r\n    return (\r\n        <div>\r\n            <img className={sidebarStyle.friendAvatar} src={props.userImage}/>\r\n            <a className={sidebarStyle.name}>{props.name}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyFriends","D:\\react-app\\my-app\\src\\conmponents\\Users\\UsersBlockContainer.js",[],"D:\\react-app\\my-app\\src\\redux\\usersReduser.js",["107"],"D:\\react-app\\my-app\\src\\conmponents\\Users\\Users.jsx",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":6,"column":13,"nodeType":"114","endLine":6,"endColumn":33},{"ruleId":"112","severity":1,"message":"113","line":6,"column":13,"nodeType":"114","endLine":6,"endColumn":137},{"ruleId":"112","severity":1,"message":"113","line":8,"column":21,"nodeType":"114","endLine":8,"endColumn":232},{"ruleId":"115","severity":1,"message":"116","line":66,"column":9,"nodeType":"117","messageId":"118","endLine":70,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"123","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":12},{"ruleId":"112","severity":1,"message":"113","line":6,"column":13,"nodeType":"114","endLine":6,"endColumn":79},{"ruleId":"124","severity":1,"message":"125","line":7,"column":13,"nodeType":"114","endLine":7,"endColumn":46},{"ruleId":"119","severity":1,"message":"126","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":20},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Post' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'keanu_reeves' is defined but never used.","no-global-assign","no-unsafe-negation"]